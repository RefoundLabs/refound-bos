"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WindowStrategy = void 0;
class WindowStrategy {
    constructor(mainnet = "https://h4n.app", testnet = "https://my.herewallet.app") {
        this.mainnet = mainnet;
        this.testnet = testnet;
        this.signWindow = null;
        this.onFailed = () => this.close();
        this.onSuccess = () => this.close();
    }
    onInitialized() {
        if (this.signWindow)
            return;
        const left = window.innerWidth / 2 - 420 / 2;
        const top = window.innerHeight / 2 - 700 / 2;
        this.signWindow = window.open("https://my.herewallet.app/loading", "_blank", `popup=1,width=420,height=700,top=${top},left=${left}`);
    }
    onRequested(id, request, reject) {
        var _a;
        if (this.signWindow == null)
            return;
        this.unloadHandler = () => { var _a; return (_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.close(); };
        window.addEventListener("beforeunload", this.unloadHandler);
        const network = (_a = request.network) !== null && _a !== void 0 ? _a : "mainnet";
        this.signWindow.location = `${network ? this.testnet : this.mainnet}/${id}`;
        this.timerHandler = setInterval(() => {
            var _a;
            if ((_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.closed)
                reject("CLOSED");
        }, 1000);
    }
    close() {
        var _a;
        clearInterval(this.timerHandler);
        (_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.close();
        this.signWindow = null;
        if (this.unloadHandler) {
            window.removeEventListener("beforeunload", this.unloadHandler);
        }
    }
}
exports.WindowStrategy = WindowStrategy;
//# sourceMappingURL=WindowStrategy.js.map